version: 2.1

orbs: 
  node: circleci/node@5.0.2
  android: circleci/android@2.0.3
jobs:
  test:
    parameters:
      node-version: 
        type: string
      system-image: 
          type: string
    machine:
      image: android:2022.04.1
    steps:
      - checkout
      - node/install:
          install-yarn: true
          node-version: << parameters.node-version >>
      - run: java -version
      - run: sudo update-java-alternatives --set /usr/lib/jvm/java-1.8.0-openjdk-amd64
      - run: JAVA_VER=$(java -version 2>&1 | sed -n ';s/.* version "\(.*\)\.\(.*\)\..*".*/\1\2/p;') && echo $JAVA_VER
      - restore_cache:
          key: node-cache-{{ .BuildNum }}
      - run: npm install
      - save_cache:
          key: node-cache-{{ .BuildNum }}
          paths: 
            - node_modules
      - run: sdkmanager "<<parameters.system-image>>"
      - run: echo "no" | avdmanager --verbose create avd -n avd1 -k "<<parameters.system-image>>"
      - run: adb start-server
      - run: 
          command: npx react-native run-android && yarn test && cd android && gradle test && adb devices | grep emulator | cut -f1 | while read line; do adb -s $line emu kill; done
          name: Run emulator, test, and kill
      - store_test_results:
          path: android/app/build/test-results/testDebugUnitTest
      - store_test_results:
          path: android/app/build/test-results/testReleaseUnitTest
      - store_test_results:
          path: reports
  build:
    parameters:
      node-version: 
        type: string
      system-image: 
          type: string
    machine:
      image: android:2022.04.1
    parallelism: 5
    steps:
      - checkout
      - node/install:
          install-yarn: false
          node-version: << parameters.node-version >>
      - restore_cache:
          key: node-cache-{{ .BuildNum }}
      - run: npm install
      - save_cache:
          key: node-cache-{{ .BuildNum }}
          paths: 
            - node_modules
      - run: sdkmanager "<<parameters.system-image>>"
      - run: echo "no" | avdmanager --verbose create avd -n avd1 -k "<<parameters.system-image>>"
      - run: adb start-server
      - restore_cache:
          key: build-cache
      - run: 
          command: react-native bundle --platform android --dev false --entry-file index.js --bundle-output android/app/src/main/assets/index.android.bundle --assets-dest android/app/src/main/res/
          name: bundle android app
      - run: cd android && ./gradlew assembleRelease
      - save_cache:
          key: build-cache-{{ .BuildNum }}
          paths: 
            - android/app/build/outputs/apk
      - store_artifacts:
          path: android/app/build/outputs/apk
          destination: build


      
workflows:
  build-and-test-workflow:
    jobs:
      - test:
         matrix:
            parameters:
               node-version: ["12.9.1", "13.9.0", "16.13.0"]
               system-image: ["system-images;android-29;default;x86_64", "system-images;android-28;default;x86_64", "system-images;android-29;default;x86", "system-images;android-28;default;x86"]
      - build:
          matrix:
            parameters:
               node-version: ["12.9.1", "13.9.0", "16.13.0"]
               system-image: ["system-images;android-29;default;x86_64", "system-images;android-28;default;x86_64", "system-images;android-29;default;x86", "system-images;android-28;default;x86"]
          filters:
            branches:
              only: master
          requires:
            - test
